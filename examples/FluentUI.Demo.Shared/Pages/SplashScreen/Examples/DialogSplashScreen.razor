@inject IDialogService DialogService

<FluentButton @onclick="@OpenSplashDefault" Appearance="Appearance.Accent">
    Open default splash screen
</FluentButton>

<FluentButton @onclick="@OpenSplashCustom" Appearance="Appearance.Accent">
    Open customized splash screen
</FluentButton>

@code
{
    private void OpenSplashDefault()
    {
        DemoLogger.WriteLine($"Open default splashscreen for 4 seconds");

        SplashScreenParameters parameters = new()
        {
            Title = "Core components",
            SubTitle = "Microsoft Fluent UI Blazor library",
            LoadingText = "Loading...",
            Message = (MarkupString)"some <i>extra</i> text <strong>here</strong>",
            Width = "640px",
            Height = "480px",
            Logo = FluentSplashScreen.LOGO,
        };
        
        DialogService.ShowSplashScreen(this, HandleDefaultSplash, parameters);

    }

    private void OpenSplashCustom()
    {
        DemoLogger.WriteLine($"Open custom splashscreen for 7 seconds");

        SplashScreenParameters parameters = new()
            {
                Title = "Water drinking 101",
                LoadingText = "Filling the re-useable bottles...",
                Message = (MarkupString)"Don't drink <strong>too</strong> much water!",
                Width = "500px",
                Height = "300px",
                Logo = "_content/FluentUI.Demo.Shared/images/Splash_Corporation_logo.png",
            };

        DialogService.ShowSplashScreen<CustomSplashScreen>(this, HandleCustomSplash, parameters);

    }

    private async Task HandleDefaultSplash(DialogResult result)
    {
        
        await Task.Run(() => DemoLogger.WriteLine($"Default splash closed"));
    }

    private async Task HandleCustomSplash(DialogResult result)
    {

        await Task.Run(() => DemoLogger.WriteLine($"Custom splash closed"));
    }
}